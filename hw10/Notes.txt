Class Notes:
11/29/2021


ABC.SCM ---[compiler-shell.scm] --> ABC.CMP ----[machine-shell.scm]----> running process on ABC.CMP

-an interper just evaluates and etc
-a compiler generates code that will be running later, and thus a linkage is necessary

12/6/2021
- Compile - producing code in which when executed will evaluated the expression
- We've also talked of self-evaluating compile, compile quoted, and the other compile example.
- Last we talked about compile sequence, and we talked about expressions in which you have to have labels.
- Such as if expression, where you compile the test and you either go 1 or the other. check label-generator in page 3
- If you have questions on regarding it, send him an email.

- We also talked about lambda expression, and the thing about an lambda expression is that we don't normally write it on itself
- 

- Example 5

(lambda (x y) (+ x y))


It puts the last in first, and first 

Nothing in page 4 do you need to modify
- We need to add let, and if?
- we need to compile overall s450.scm...
- We need to put cdr and car, pretty self-forward
- Two things are map? and apply.
- Apply has been given with new hints
- Map is pretty harder
- We don't be modifying most codes in compiler.scm
- We will be using a lot stuff from the existing code, such as for apply
we might need to use apply-procedure-call? (forgot).
- We reallly won't need to modify code, we just need to add stuff into it like the 
previous HW.
- There's a lot to talk about, but he wants us to drive the code. Walking through in more
detail. 
- Any questions? No? 
